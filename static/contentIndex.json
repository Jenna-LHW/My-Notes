{"Web-and-Mobile-Application-Development/Django/Django":{"slug":"Web-and-Mobile-Application-Development/Django/Django","filePath":"Web and Mobile Application Development/Django/Django.md","title":"Django","links":["Web-and-Mobile-Application-Development/Django/Notes/My-Django-Setup","Web-and-Mobile-Application-Development/Django/Notes/Getting-Started-with-Django/Django-Project","Web-and-Mobile-Application-Development/Django/Notes/Getting-Started-with-Django/Django-Project-MVT-Structure","Web-and-Mobile-Application-Development/Django/Notes/Django-Syntax/Boolean-Operators"],"tags":[],"content":"Django is a Python framework that simplifies web development by handling complex tasks for you.\nDjango uses the MVT (Model-View-Template) design pattern:\n\nModel: Represents the data you want to display, typically sourced from a database.\nView: Handles incoming requests and returns the appropriate template and content based on the user’s request.\nTemplate: A text file (usually HTML) that defines the structure of the web page and includes logic for displaying the data.\n\nSpecial addition:  My Django Setup\nSome Reference Point:\nGetting Started with Django\n\nDjango Project\nDjango Project MVT Structure\n\nDjango Views\nDjango URLs\nDjango Templates\nDjango Syntax\n\nBoolean Operators\n\nDjango Models\nDjango Admin"},"Web-and-Mobile-Application-Development/Django/Notes/Django-Syntax/Boolean-Operators":{"slug":"Web-and-Mobile-Application-Development/Django/Notes/Django-Syntax/Boolean-Operators","filePath":"Web and Mobile Application Development/Django/Notes/Django Syntax/Boolean Operators.md","title":"Boolean Operators","links":[],"tags":[],"content":"Django Templates Tags - Boolean Operators\nDjango provides the ability to use conditional logic like if, else, and elif using Boolean operators within templates. This allows you to conditionally render parts of a webpage based on values passed from your views.\nSyntax:\n{% if variable boolean_operator value %}  \n\t// statements  \n{% endif %}"},"Web-and-Mobile-Application-Development/Django/Notes/Getting-Started-with-Django/Django-Project-MVT-Structure":{"slug":"Web-and-Mobile-Application-Development/Django/Notes/Getting-Started-with-Django/Django-Project-MVT-Structure","filePath":"Web and Mobile Application Development/Django/Notes/Getting Started with Django/Django Project MVT Structure.md","title":"Django Project MVT Structure","links":["Django-Models","Django-Views","Django-Templates"],"tags":[],"content":"Django Project MVT Structure\nDjango follows the MVT (Model-View-Template) architectural pattern, which is a variation of the traditional MVC (Model-View-Controller) design pattern used in web development. This pattern separates the application into three main components:\n1. Model\nModel acts as the data layer of your application. It defines the structure of your database and handles data-related logic. It typically represents your database tables and is responsible for querying, inserting, updating, and deleting data. Django models are usually backed by relational databases like MySQL, PostgreSQL, SQLite, etc\n\nTo check more, go to Django Models\n\n2. View\nView handles the business logic and user interface rendering. It processes user requests, interacts with models to fetch data, and passes that data to templates for display. In Django, views are Python functions or classes that return HTTP responses.\n\nTo check more, go to Django Views \n\n3. Template\nTemplate is responsible for presenting the data to the user. It contains the static parts of the HTML and special template syntax (like Django Template Language) to dynamically insert data. Templates usually consist of HTML, CSS, and JavaScript.\n\nTo check more, go to Django Templates\n\nExplanation on key files and folders\nConsider this Django project Rental\nRental/\n    manage.py\n    Rental/\n        __init__.py\n        settings.py\n        urls.py\n        wsgi.py\n        asgi.py\n\n\nmanage.py: This file is used to interact with your project via the command line.\n\n\n\n                  \n                  Tip \n                  \n                \n\n\nFor getting the full list of commands that can be executed by manage.py type this in the terminal\npython manage.py help\n\n\n\n\nFolder(Rental): This folder contains all the packages of your project.\n\n _init_.py - It is a python package. It is invoked when the package or a module in the package is imported. We usually use this to execute package initialization code, for example for the initialization of package-level data.\nsettings.py - As the name indicates it contains all the website settings. In this file, we register any applications we create, the location of our static files, database configuration details, etc.\nurls.py - In this file, we store all links of the project and functions to call.\nwsgi.py - This file is used in deploying the project in WSGI. It is used to help your Django application communicate with the webserver.\n\n\n"},"Web-and-Mobile-Application-Development/Django/Notes/Getting-Started-with-Django/Django-Project":{"slug":"Web-and-Mobile-Application-Development/Django/Notes/Getting-Started-with-Django/Django-Project","filePath":"Web and Mobile Application Development/Django/Notes/Getting Started with Django/Django Project.md","title":"Django Project","links":[],"tags":[],"content":"Create a new Django project\nOnce Django is installed, we can start to create a new Django project\nStep 1: Start a new Django project\ndjango-admin start project project_name\nStep 2: Navigate to the project directory\ncd project_name\nStep 3: Start the server\npython manage.py runserver\nStep 4: Verify the server status\nTo check whether server is running or not go to web browser and enter: https://127.0.0.1:8000/ as URL."},"Web-and-Mobile-Application-Development/Django/Notes/My-Django-Setup":{"slug":"Web-and-Mobile-Application-Development/Django/Notes/My-Django-Setup","filePath":"Web and Mobile Application Development/Django/Notes/My Django Setup.md","title":"My Django Setup","links":[],"tags":[],"content":"In order to use Django, you must have Python 3 on your operating system.  You will also need the python package index tool (Pip3) which is used to manage (install, update, and remove) Python packages/libraries used by Django and your other Python apps.\n\n\n                  \n                  Note\n                  \n                \n\n\nI am using Linux, so all the notes below will be for Linux. (Ubuntu 24.04.2 LTS)\n\n\n\nUbuntu includes python 3 by defaults. You can confirm this by running the following in the terminal:\npython3 -V\n \n# Output: Python 3.12.3\nHowever, the Python Package Index tool (pip3) you’ll need to install packages for Python 3 (including Django) is not available by default. You can install pip3 in the bash terminal using:\nsudo apt install python3-pip\nUsing Django inside a Python virtual machine\nInstalling the virtual environment\nAfter installing Python and pip you can install virtualenvwrapper (which includes virtualenv).\nInstall the tool using pip3:\nsudo pip3 install virtualenvwrapper\n\n\n                  \n                  Error \n                  \n                \n\n\nThis is did not work for me. As I am using a newer version of Ubuntu.\nThis is what I did:\n\nInstall virtualenvwrapper using apt instead of pip\n\nsudo apt update\nsudo apt install virtualenvwrapper\n\n\n\nThen add the following lines to the end of your shell startup file (this is a hidden file name .bashrc in your home directory).\nThese set the location where the virtual environments should live, the location of your development project directories, and the location of the script installed with this package:\n\nAccess the file(.bashrc) by typing:\n\nnano .bashrc\n\nLines to add at the end of the file (.bashrc):\n\nexport WORKON_HOME=$HOME/.virtualenvs\nexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3\nexport VIRTUALENVWRAPPER_VIRTUALENV_ARGS=&#039; -p /usr/bin/python3 &#039;\nexport PROJECT_HOME=$HOME/Devel\nsource /usr/share/virtualenvwrapper/virtualenvwrapper.sh\n\n\n                  \n                  Important \n                  \n                \n\n\n\n/usr/bin/python3 is the location of  my Python3.\nTo find the location(path) of python3:\n\nwhich python3\n# Output: /usr/bin/python3\n\n/usr/share/virtualenvwrapper/virtualenvwrapper.sh is the location of of the virtualenvwrapper.sh script.\n\nSince I used apt installation the location of the script cannot be found by using which virtualenvwrapper.sh\n\n\n\n\n\n\nThen reload the startup file by running the following command in the terminal:\nsource ~/.bashrc\nAt this point you should see a bunch of scripts being run as shown below:\nvirtualenvwrapper.user_scripts creating /home/ubuntu/.virtualenvs/premkproject\nvirtualenvwrapper.user_scripts creating /home/ubuntu/.virtualenvs/postmkproject\n# …\nvirtualenvwrapper.user_scripts creating /home/ubuntu/.virtualenvs/preactivate\nvirtualenvwrapper.user_scripts creating /home/ubuntu/.virtualenvs/postactivate\nvirtualenvwrapper.user_scripts creating /home/ubuntu/.virtualenvs/get_env_details\nNow you can create a new virtual environment with the mkvirtualenv command.\nmkvirtualenv my_django_environment\n\nNote: my_django_environment is the name of my virtual environment.\n\nUsing a virtual environment\nThere are just a few other useful commands that you should know:\n\ndeactivate — Exit out of the current Python virtual environment\nworkon — List available virtual environments\nworkon name_of_environment — Activate the specified Python virtual environment\nrmvirtualenv name_of_environment — Remove the specified environment.\n\nInstalling Django\nOnce you’ve created a virtual environment, it will automatically enter the virtual environment.\nTo know if you are in the virtual environment, you will the name of the virtual environment.\n(my_django_environment) jenna@jenna-BDZ-WXX9:~$\nIf you are not in the virtual environment,\nworkon my_django_environment\nYou can now use pip3 to install Django:\npython3 -m pip install django~=5.2\nYou can test that Django is already installed by running the following command:\npython3 -m django --version\n \n#Output: 5.2.5\nCreating a skeleton website\nCreating the project\nTo create the project:\n\nOpen the terminal and make sure you are in the virtual environment\nNavigate to the directory where you want to create your project. (For me, the directory is django_projects)\n\n(my_django_environment) jenna@jenna-BDZ-WXX9:~$ cd django_projects\n(my_django_environment) jenna@jenna-BDZ-WXX9:~/django_projects$ pwd\n/home/jenna/django_projects\nCreate the new project using the django-admin startproject command as shown, and then navigate into the project folder:\ndjango-admin startproject Rental\ncd Rental\n\n\n                  \n                  Note \n                  \n                \n\n\nThe name of the project is Rental. You can use any other name\n\n\n\nThe django-admin tool creates a folder/file structure as follows:\nRental/\n    manage.py\n    Rental/\n        __init__.py\n        settings.py\n        urls.py\n        wsgi.py\n        asgi.py\nThe Rental project sub-folder is the entry point for the website:\n\n__init__.py is an empty file that instructs Python to treat this directory as a Python package.\nsettings.py contains all the website settings, including registering any applications we create, the location of our static files, database configuration details, etc.\nurls.py defines the site URL-to-view mappings. While this could contain all the URL mapping code, it is more common to delegate some of the mappings to particular applications, as you’ll see later.\nwsgi.py is used to help your Django application communicate with the web server. You can treat this as boilerplate.\nasgi.py is a standard for Python asynchronous web apps and servers to communicate with each other. Asynchronous Server Gateway Interface (ASGI) is the asynchronous successor to Web Server Gateway Interface (WSGI). ASGI provides a standard for both asynchronous and synchronous Python apps, whereas WSGI provided a standard for synchronous apps only. ASGI is backward-compatible with WSGI and supports multiple servers and application frameworks.\n\nThe manage.py script is used to create applications, work with databases, and start the development web server.\nCreating the rentals application\nNext, run the following command to create the rentals application that will live inside our Rental project. Make sure to run this command from the same folder as your project’s manage.py:\npython3 manage.py startapp rentals\nThe tool creates a new folder and populates it with files for the different parts of the application (shown in the following example). Most of the files are named after their purpose (e.g., views should be stored in views.py, models in models.py, tests in tests.py, administration site configuration in admin.py, application registration in apps.py and contain some minimal boilerplate code for working with the associated objects.\nThe updated project directory should now look like this:\nRental/\n    manage.py\n    Rental/\n    rentals/\n        admin.py\n        apps.py\n        models.py\n        tests.py\n        views.py\n        __init__.py\n        migrations/\nIn addition we now have:\n\nA migrations_ folder, used to store “migrations” — files that allow you to automatically update your database as you modify your models.\n__init__.py — an empty file created here so that Django/Python will recognize the folder as a Python Package and allow you to use its objects within other parts of the project.\n\nRegistering the rentals application\nNow that the application has been created, we have to register it with the project so that it will be included when any tools are run\nOpen the project settings file, settings.py, and find the definition for the INSTALLED_APPS list. Then add a new line at the end of the list, as shown below:\nINSTALLED_APPS = [\n    &#039;django.contrib.admin&#039;,\n    &#039;django.contrib.auth&#039;,\n    &#039;django.contrib.contenttypes&#039;,\n    &#039;django.contrib.sessions&#039;,\n    &#039;django.contrib.messages&#039;,\n    &#039;django.contrib.staticfiles&#039;,\n    # Add our new application\n    &#039;rentals.apps.RentalsConfig&#039;, # This object was created for us in /rentals/apps.py\n]\nThe new line specifies the application configuration object (RentalsConfig) that was generated for you in .../Rental/rentals/apps.py when you created the application.\nHooking up the URL mapper\nThe website is created with a URL mapper file (urls.py) in the project folder. While you can use this file to manage all your URL mappings, it is more usual to defer mappings to the associated application.\n\nOpen Rental/Rental/urls.py.\n\n&quot;&quot;&quot;\nURL configuration for Rental project.\n  \nThe `urlpatterns` list routes URLs to views. For more information please see:\ndocs.djangoproject.com/en/5.2/topics/http/urls/\n \nExamples:\nFunction views\n1. Add an import: from my_app import views\n2. Add a URL to urlpatterns: path(&#039;&#039;, views.home, name=&#039;home&#039;)\n \nClass-based views\n1. Add an import: from other_app.views import Home\n2. Add a URL to urlpatterns: path(&#039;&#039;, Home.as_view(), name=&#039;home&#039;)\n \nIncluding another URLconf\n1. Import the include() function: from django.urls import include, path\n2. Add a URL to urlpatterns: path(&#039;blog/&#039;, include(&#039;blog.urls&#039;))\n&quot;&quot;&quot;\n \nfrom django.contrib import admin\nfrom django.urls import path\n \nurlpatterns = [\n\tpath(&#039;admin/&#039;, admin.site.urls),\n]\nTo add a new list item to the urlpatterns list, add the following lines to the bottom of the file. This new item includes a path() that forwards requests with the pattern rentals/ to the module rentals.urls (the file with the relative URL rentals/urls.py).\nfrom django.urls import include\n \nurlpatterns +=[\n\tpath(&quot;rentals/&quot;,include(&#039;rentals.urls&#039;)),\n]\nAs a final step, create a file inside your rentals folder called urls.py, and add the following text to define the imported urlpatterns.\nfrom django.urls import path\nfrom . import views\n \nurlpatterns = [\n\tpath(&#039;&#039;,views.index,name=&#039;index&#039;)\n]\nRunning the website\nDuring development, you can serve the website first using the development web server, and then viewing it on your local web browser.\nRun the development web server by calling the runserver command (in the same directory as manage.py):\npython3 manage.py runserver\nOnce the server is running, you can view the site by navigating to http://127.0.0.1:8000/ in your local web browser. You will see a site error page.\nHome Page\nView Function\nOpen rentals/views.py and note that the file already imports the render() shortcut function to generate an HTML file using a template and data:\nfrom django.shortcuts import render\n \n# Create your views here.\nAdd the following:\ndef index(request):\n\treturn render(request, &#039;index.html&#039;)\nTemplate\nA template is a text file that defines the structure or layout of a file (such as an HTML page), it uses placeholders to represent actual content.\nA Django application created using startapp (like the skeleton of this example) will look for templates in a subdirectory named ‘templates’ of your applications. For example, in the index view that we just added, the render() function will expect to find the file index.html in /Rental/rentals/templates/and will raise an error if the file is not present.\n\nCreate a template directory in /Rental/rentals/\nIn the template directory create the index.html file\nWrite your html code.\nSave all.\n\nAnd you are good to go. On your browser: http://127.0.0.1:8000/rentals/"},"Web-and-Mobile-Application-Development/HTML_CSS/HTML_CSS":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/HTML_CSS","filePath":"Web and Mobile Application Development/HTML_CSS/HTML_CSS.md","title":"HTML_CSS","links":["Web-and-Mobile-Application-Development/HTML_CSS/Notes/Introduction-to-HTML","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes","Web-and-Mobile-Application-Development/HTML_CSS/Notes/Introduction-to-CSS","Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Rules","Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Selectors","Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Properties"],"tags":[],"content":"Introduction to HTML\n\nIntroduction to HTML\n\nSome HTML reference point:\n\nHTML Tags\nHTML Attributes\n\nIntroduction to CSS\n\nIntroduction to CSS\n\nSome CSS reference point:\n\nCSS Rules\nCSS Selectors\nCSS Properties\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Properties":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Properties","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/CSS Properties.md","title":"CSS Properties","links":[],"tags":[],"content":"CSS Properties\nCSS properties are the foundation of web design, used to style and control the behaviour of HTML elements. They define how elements look and interact on a webpage.\n\nUsed to control layout, colors, fonts, spacing, and animations on web pages.\nIt is essential for making web pages responsive and accessible across devices.\nHelp maintain consistency and efficiency in web design and development.\n\nThe list of complete CSS properties is given below.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPropertiesDescriptions[@charset Rule]Specifies the character encoding used in the style sheet."},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Properties/@charset-Rule":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Properties/@charset-Rule","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/CSS Properties/@charset Rule.md","title":"@charset Rule","links":[],"tags":[],"content":""},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Rules":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Rules","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/CSS Rules.md","title":"CSS Rules","links":["Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Selectors","Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Properties"],"tags":[],"content":"CSS Rules\nCSS employs a very straightforward syntax that consists of CSS Rules.\nBasic Structure of a CSS rule:\nselector {\n  property: value;\n  another-property: another-value;\n}\n\nSelectors, Properties and Values\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSyntax ComponentDefinitionSelectorSpecifies which HTML elements the rule will apply to. For Example: element selector p will target all &lt;p&gt; elementsPropertyDefines the aspect you want to to style, such as color, font-size, margin, etcValueDetermines the styling details.Example: color: blue;Declaration BlockA set of property-value pairs enclosed in curly braces {}.\nCombining Selectors\nWhen working with CSS, you’ll frequently come across situations where you need to apply the same styles to multiple elements that share common attributes.\nSyntax;\nselector1, selector2, selector3 {\n  property: value;\n}\n\nNote: Many properties in CSS can take multiple values separated by commas within the property-value pair.\nExample:\np {\n\tfont-family: &quot;Roboto&quot;, Arial, sans-serif;\n}"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Selectors":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Selectors","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/CSS Selectors.md","title":"CSS Selectors","links":["Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes"],"tags":[],"content":"CSS Selectors\nCSS Selectors are used to target HTML elements on your pages, allowing you to apply styles based on their ID, class, attributes and more. There are mainly 5 types of selectors\n\n\nBasic CSS Selector: These are used to target elements by tag, class or # ID  for fundamental styling needs\n\n\nCombinators: Ideal for styling elements based on their DOM relationships (Example, parent-child or sibling relationships)\n\n\nGroup Selectors: These are used to apply the same styles to multiple unrelated elements simultaneously.\n\n\nAttribute Selectors: Perfect for styling elements based on specific attributes or values, such as form inputs or links with certain prefixes or states\n\n\nPseudo-Classes: Best for styling elements dynamically or interactively, like: hover for user interaction or: nth-child() for structural styling.\n\nPseudo-Elements\n\n\n\nTypes of selectors\nBasic Selectors\nBasic selectors in CSS are simple tools used to target specific HTML elements for styling. These include selecting by element name, class, ID or universally.\nUniversal Selector\nUniversal selector(*):  Selects all elements on the page and applies the same style universally.\nExample:\n\t* {\n\t\t  color: red;\n\t  }\nElement Selector\nElement selector: Targets all elements of a specific type, such as paragraphs or headers.\nExample:\n\tp {\n\t\tfont-size: 16px;\n\t}\nClass Selector\nClass selector(.): Applies styles to elements with specific class attribute\nExample:\n\t.button {\n\t\tbackground-color: blue;\n\t\tcolor: white;\n\t}\nID Selector\nID Selector(#): Styles a single element identified by its unique id.\n\t#header {\n\t\tbackground-color: gray;\n\t}\nCombinators Selectors\nCombinators in CSS are used to define relationships between selectors, allowing you to sytle elements based on their hierarchy or positioning in the document.\nCommon combinators include descendant ( ), child (&gt;), adjacent sibling (+) and general sibling(~).\nDescendant Selectors\nDescendant selectors: Targets an element inside another, such as paragraphs inside div.\nExample:\n\tdiv p {\n\t\tcolor: red;\n\t}\nChild Selectors\nChild Selectors(&gt;): They affect only the direct child element of a parent.\nExample:\n\tdiv&gt;p{\n\t\tmargin-left: 20px;\n\t}\nAdjacent Sibling Selectors\nAdjacent sibling selectors(+):  Styles an immediately following another.\nExample:\n\nMaking the first paragraph bold after an h1\n\n\th1+p {\n\t\tfont-weight: bold;\n\t}\nGeneral Sibling Selectors\nGeneral sibling selectors(~): Styles all siblings that follow a specific element.\nExample:\n\nitalicizing all paragraphs following an h1\n\n\th1~p {\n\t\tfont-style; italic;\n\t}\nAttribute Selectors\nPseudo-Classes\nPseudo-classes in CSS define the special states of elements for styling.\nExamples include :hover (applies when an element is hovered), :first-child (targets the first child of a parent), and :nth-child(2) (targets the second child).\n:hover\n:hover: Styles elements when the user hovers over them.\nExample:\n\ta:hover {\n\t\tcolor: red;\n\t}"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Attributes.md","title":"HTML Attributes","links":[],"tags":[],"content":""},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes/methods":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes/methods","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Attributes/methods.md","title":"methods","links":[],"tags":[],"content":"HTML | &lt;form&gt; method Attribute\nThe HTML &lt;form&gt; method Attribute is used to specify the HTTP method used to send data while submitting the form.\nThere are two kinds of HTTP methods:\n\nGET\nPOST\n\nGET Method\nMainly used for retrieving data from a server (example, fetching a webpage or data)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeatureDescriptionData sentSent in the URL as query parameterVisibleYes, data is visible in the URLLength LimitLimited by URL lengthCachingOften cached by browsersBookmarkableYes (URLs can be bookmarked and shared)IdempotentYes (repeating the same GET request gives the same result, in theory)SecurityLess secure; not suitable for sensitive data (like passwords)\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=&quot;text-align:center;&quot;&gt;\n \n    &lt;h1&gt; HTML &lt;code&gt;form&lt;/code&gt; Method Attribute. &lt;/h1&gt;\n \n    &lt;form action=&quot;/action_page.php&quot; id=&quot;users&quot; method=&quot;GET&quot;&quot;&gt;\n \n        First name: &lt;input type=&quot;text&quot; name=&quot;fname&quot; placeholder=&quot;Enter first name&quot;&gt;\n        &lt;br&gt;&lt;br&gt;\n        Last name: &lt;input type=&quot;text&quot; name=&quot;lname&quot; placeholder=&quot;Enter last name&quot;&gt;\n        &lt;br&gt;&lt;br&gt;\n        &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\n    &lt;/form&gt;\n    &lt;p&gt;\n        By clicking the submit button the Entered&lt;br&gt;\n        details will be sent to &quot;/action_page.php&quot;&lt;br&gt;\n        and will appear in the URL\n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nPOST Method\nMainly used for sending data to the server to create or updated resources\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeatureDescriptionData sentSent in the body of the request, not the URLVisibleNo, data is not visible in the URLLength limitNo significant limit (depends on server settings)CachingNot cached by defaultBookmarkableNoIdempotentNo (submitting the same POST multiple times can have side effects, like creating multiple orders)SecurityMore secure than GET, but still needs HTTPS to protect data\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=&quot;text-align:center;&quot;&gt;\n \n    &lt;h1&gt; HTML &lt;code&gt;form&lt;/code&gt; Method Attribute. &lt;/h1&gt;\n \n    &lt;form action=&quot;/action_page.php&quot; id=&quot;users&quot; method=&quot;POST&quot;&gt;\n \n        First name: &lt;input type=&quot;text&quot; name=&quot;fname&quot; placeholder=&quot;Enter first name&quot;&gt;\n        &lt;br&gt;&lt;br&gt;\n        Last name: &lt;input type=&quot;text&quot; name=&quot;lname&quot; placeholder=&quot;Enter last name&quot;&gt;\n        &lt;br&gt;&lt;br&gt;\n        &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\n    &lt;/form&gt;\n    &lt;p&gt;\n        By clicking the submit button the Entered&lt;br&gt;\n        details will be sent to &quot;/action_page.php&quot;&lt;br&gt;\n        and will NOT appear in the URL\n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes/name":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes/name","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Attributes/name.md","title":"name","links":[],"tags":[],"content":"HTML | &lt;form&gt; name Attribute\nThe HTML &lt;form&gt; name attribute is used to specify the name of a form element. It is used to reference the form-data after submitting the form or to reference the element in a JavaScript.\nSyntax:\n&lt;form name=&quot;name&quot;&gt; \nAttribute Values: It contains a single value name which describes the name of the &lt;form&gt; element."},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags.md","title":"HTML Tags","links":["Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/!DOCTYPE-html","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/html","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/head","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/body","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/abbreviation","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/address","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/anchor","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/bold","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/break","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/button","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/caption","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/code","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/div","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/fieldset","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/figcaption","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/figure","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/footer","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/form","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/header","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/heading","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/image","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/input"],"tags":[],"content":"HTML Tags List\nHTML Tags are fundamental elements used to structure and format content on web pages. They provide instructions to web browser on how to render text, images, links and other media.\nHTML tags are enclosed in angle brackets &lt; &gt; and usually come in pairs: an opening tag and a closing tag.\nExample:\n\n&lt;p&gt;  is an opening tag for a paragraph\n&lt;/p&gt; is the closing tag\n\nSome tags are self-closing, meaning they do not require a closing tag, such as &lt;img&gt; and &lt;br&gt;.\nEssential tags for defining an HTML document structure include !DOCTYPE html, html, head, and body.\nA to Z HTML Tags\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTagsDescriptionSyntax!DOCTYPE htmlEvery HTML document requires a document type declaration.&lt;!DOCTYPE html&gt;abbreviationThe abbreviation tag in HTML is used to define the abbreviation or short form of an element.&lt;abbr title=&quot; &quot;&gt; ... &lt;/abbr&gt;addressThe address tag in HTML indicates the contact information of a person or an organization.&lt;address&gt; ... &lt;/address&gt;anchorThe anchor tag in HTML is used to create a hyperlink on the webpage.&lt;a href=&quot; &quot;&gt; ...&lt;/a&gt;bodyThe body tag in HTML is used to define the main content present inside an HTML page.&lt;body&gt; Contents... &lt;/body&gt;boldThe bold tag in HTML is used to sepcify the bold text without any extra importance.&lt;b&gt;...&lt;/b&gt;breakThe break tag inserts a single carriage return or breaks in the document. This element has no end tag.&lt;br&gt;buttonThe button tag in HTML is used to define the clickable button. &lt;button&gt; tag is used to submit the content&lt;button type=&quot;button&quot;&gt;captionThe caption tag is used to specify the caption of a table. Only one caption van be specified for table.&lt;caption align = &quot;value&quot;&gt;&lt;/caption&gt;code|The code tag in HTML is used to define the piece of computer code.&lt;code&gt;Contents&lt;/code&gt;divThe div tag is used in HTML to make divisions of content in the web page (text, images, header, footer, navigation bar, etc).&lt;div&gt;Content&lt;/div&gt;fieldsetThe fieldset tag in HTML5 is used to make a group of related elements in the form, and it creates the box over the elements&lt;fieldset&gt;Contents&lt;/fieldset&gt;figcaptionThe figcaption tag in HTML is used to set a caption to the figure element in a document.&lt;figcaption&gt; Figure caption &lt;/figcaption&gt;figureThe figure tag in HTML is used to add self-contained content like illustrations, diagrams, photos or codes listed in a document.&lt;figure&gt; Image content... &lt;/figure&gt;footerThe footer tag in HTML is used to define a footer of HTML document.&lt;footer&gt; ... &lt;/footer&gt;formThis form is used basically for the registration process, logging or creating a profile on a website, etc…&lt;form&gt; Form Content &lt;/form&gt;headThe head tag in HTML is used to defining the head portion of the document which contains information related to the document.&lt;head&gt; ... &lt;/head&gt;headerThe header tag is used to contain the information related to the title and heading of the related content.&lt;header&gt; ... &lt;/header&gt;headingAn HTML heading is used to define the headings of a page. These 6 headings are h1, h2, h3, h4, h5, and h6; with h1 being the highest level and h6 being the least.&lt;h1&gt;Heading1&lt;/h1&gt;&lt;h2&gt;Heading2&lt;/h2&gt;htmlThe html tag in HTML is used to define the root of HTML and XHTML documents&lt;html&gt; Contents &lt;/html&gt;imageThe image tag is used to insert images&lt;img src=&quot;url&quot; alt=&quot;some_text&quot;&gt;inputThe input tag is used within &lt;form&gt; element to declare input controls that allow users to input data&lt;input type=&quot;value&quot; ... /&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/!DOCTYPE-html":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/!DOCTYPE-html","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/!DOCTYPE html.md","title":"!DOCTYPE html","links":[],"tags":[],"content":"HTML DOCTYPE\nHTML DOCTYPE Declaration\nHTML DOCTYPE (Document Type Declaration) is an instruction that appears at the beginning of an HTML document, before the &lt;html&gt; tag.\n\nIts primary role is to tell the web browser which version of HTML the page is written in, ensuring that the browser renders the content correctly.\nIt is not an HTML tag, but rather a special instruction that specifies how the browser should interpret the HTML.\nI t is recommended to always use &lt;!DOCTYPE html&gt; at the top of your HTML file for HTML5.\n\nHow HTML Doctype tell the browser which version of html it is?\nThe &lt;!DOCTYPE&gt; declaration doesn’t directly specify which version of HTML is being used (like, “HTML5” or “HTML4”), but rather it tells the browser to use a specific rendering mode. It helps the browser determine how it should interpret the content. There are two main modes:\n\nStandards Mode: The browser will render the page according to the modern web standards.\nQuirks Mode: The browser will render the page in a backwards-compatible manner, emulating older web behavior to handle legacy content.\n\nWhat Happens Without &lt;!DOCTYPE html&gt;\nWithout &lt;!DOCTYPE html&gt;, your HTML code can still run, but it may face several significant drawbacks:\n\n\nQuirks Mode Activation: Browsers may switch to quirks mode, leading to outdated behaviors that cause inconsistent rendering compared to standards mode.\n\n\nRendering Issues: CSS properties like box-sizing, margins, and widths may be interpreted differently, causing layout problems and misaligned elements that are difficult to debug.\n\n\nCross-Browser Inconsistencies: Different browsers might render the page differently in quirks mode, making it hard to achieve cross-browser consistency.\n\n\nCSS and JavaScript Problems: Modern features like Flexbox, Grid, and certain JavaScript methods may not work correctly, causing compatibility issues.\n\n\nUnpredictable Behavior: Without &lt;!DOCTYPE&gt;, rendering becomes unpredictable, making debugging more challenging and leading to unpredictable page behavior when adding new features.\n\n\nBest Practices When Using DOCTYPE\n\nAlways Declare DOCTYPE: Always start an HTML document with a DOCTYPE declaration to ensure that the browser knows how to correctly render the page.\nUse HTML5 DOCTYPE for New Websites: For all new projects, use the HTML5 DOCTYPE as it is the most current and widely supported standard.\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/abbreviation":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/abbreviation","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/abbreviation.md","title":"abbreviation","links":["Title"],"tags":[],"content":"HTML abbr Tag\nThe &lt;abbr&gt; tag in HTML is used to represent abbreviations and provides additional information about them through the title attribute, which displays a tooltip when hovered over. It helps improve accessibility and SEO by offering context for the abbreviated text.\n\nIt makes text clearer by explaining abbreviations.\nImproves accessibility with helpful tooltips.\nWorks with global and event attributes for flexible use.\n\nSyntax:\n&lt;abbr title=&quot;Long form&quot;&gt; Short form &lt;/abbr&gt;\nTitle: Displays the full form as a tooltip when hovering over the abbreviation.\n\n\n                  \n                  Info \n                  \n                \n\n\nAccording to google:\nA tooltip is a small, on-screen text box that provides additional information about a user interface element. It typically appears when a user hovers their mouse cursor over an element, such as a button, an icon or a link.\n\n\n\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;My First Page&lt;/title&gt;\n \n    &lt;style&gt;\n        body {\n            text-align: center;\n        }\n \n        h1 {\n            color: green;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Welcome to my First Page&lt;/h1&gt;\n    &lt;p&gt;\n        A place where you will learn \n        &lt;abbr title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/abbr&gt; \n        and \n        &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; \n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nStyling Abbr Tags\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;My First Page&lt;/title&gt;\n \n    &lt;style&gt;\n        body {\n            text-align: center;\n        }\n        h1 {\n            color: green;\n        }\n \n        abbr{\n            color: #007bff;\n            font-weight: bold;\n            font-size: 1.1 rem;\n            border-bottom: 1 px dashed #007bff;\n        }\n \n        abbr:hover{\n            text-decoration: none;\n            color: #0056b3;\n        }\n \n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Welcome to my First Page&lt;/h1&gt;\n    &lt;p&gt;\n        A place where you will learn \n        &lt;abbr title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/abbr&gt; \n        and \n        &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; \n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nBest Practices for Using the &lt;abbr&gt; Tag\n\nAlways include the title attribute to provide the full expansion of the abbreviation.\nUse the &lt;abbr&gt; tag for both abbreviations and acronyms to enhance semantic meaning.\nEnsure the abbreviation is necessary and widely recognized to avoid confusion.\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/address":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/address","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/address.md","title":"address","links":[],"tags":[],"content":"HTML &lt;address&gt; Tag\nThe &lt;address&gt; tag in HTML is used to define contact information for the author or owner of a document or an article. It is typically used for information such as an address, email, or phone number.\n\nThe &lt;address&gt; element is a block-level element by default.\nThe content inside &lt;address&gt; is usually displayed in italics and may have a line break after it.\nIt should not be used for generic addresses (like physical locations), but only for authorial contact information.\n\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;My First Page&lt;/title&gt;\n \n    &lt;style&gt;\n        h1 {\n            text-align: center;\n            color: green;\n        }\n \n        abbr{\n            color: #007bff;\n            font-weight: bold;\n            font-size: 1.1 rem;\n            border-bottom: 1 px dashed #007bff;\n        }\n \n        abbr:hover{\n            text-decoration: none;\n            color: #0056b3;\n        }\n \n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Welcome to my First Page&lt;/h1&gt;\n    &lt;address&gt;\n        Author Name: Jenna | Address: Port Louis, Mauritius\n    &lt;/address&gt;\n    &lt;p&gt;\n        A place where you will learn \n        &lt;abbr title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/abbr&gt; \n        and \n        &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; \n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nStyling the&lt;address&gt; Tag\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;My First Page&lt;/title&gt;\n \n    &lt;style&gt;\n        h1 {\n            text-align: center;\n            color: green;\n        }\n        abbr{\n            color: #007bff;\n            font-weight: bold;\n            font-size: 1.1 rem;\n            border-bottom: 1 px dashed #007bff;\n        }\n        abbr:hover{\n            text-decoration: none;\n            color: #0056b3;\n        }\n \n        address {\n            color: #333;\n            text-align: center;\n        }\n \n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Welcome to my First Page&lt;/h1&gt;\n    &lt;address&gt;\n        Author Name: Jenna | Address: Port Louis, Mauritius\n    &lt;/address&gt;\n    &lt;p&gt;\n        A place where you will learn \n        &lt;abbr title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/abbr&gt; \n        and \n        &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; \n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nBest Practices for Using the &lt;address&gt; Tag\n\nUse &lt;address&gt; to enclose contact details of the document’s author or owner.\nAvoid using &lt;address&gt; for unrelated contact information.\nPlace &lt;address&gt; within relevant sections, like [[footer|]] to associate contact info appropriately.\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/anchor":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/anchor","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/anchor.md","title":"anchor","links":[],"tags":[],"content":"HTML &lt;a&gt; Tag\nThe &lt;a&gt; tag defines a hyperlink, which is used to link from one page to another. The most important attribute of the &lt;a&gt; element is the href attribute, which indicates the link’s destination. This attribute determines where the user is directed upon clicking the link.\nSyntax:\n&lt;a href = &quot;link&quot;&gt; Link Name &lt;/a&gt;\nBy default, links appear as follows in all browsers:\n\nUnvisited links: Underlined and blue.\nVisited links: Underlined and purple.\nActive links: Underlined and red.\n\nExample:\n&lt;a href=&quot;jenna-personal-website.netlify.app/&quot;&gt;My website&lt;/a&gt;\nOpening links in new tab\n&lt;a href=&quot;jenna-personal-website.netlify.app/&quot; target=&quot;_blank&quot;&gt;My website&lt;/a&gt;\nLinking to Email Address\n&lt;a href=&quot;mailto:example@gmail.com:&quot;&gt;Send email&lt;/a&gt;\nCreating Internal Page Anchor\n&lt;a href=&quot;#home&quot;&gt;Home&lt;/a&gt;\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;My First Page&lt;/title&gt;\n \n    &lt;style&gt;\n        h1 {\n            text-align: center;\n            color: green;\n        }\n        abbr{\n            color: #007bff;\n            font-weight: bold;\n            font-size: 1.1 rem;\n            border-bottom: 1 px dashed #007bff;\n        }\n        abbr:hover{\n            text-decoration: none;\n            color: #0056b3;\n        }\n \n        address {\n            color: #333;\n            text-align: center;\n        }\n \n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Welcome to my First Page&lt;/h1&gt;\n    &lt;address&gt;\n        Author Name: Jenna | Address: Port Louis, Mauritius\n    &lt;/address&gt;\n    &lt;p&gt;\n        A place where you will learn \n        &lt;abbr title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/abbr&gt; \n        and \n        &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; \n    &lt;/p&gt;\n    &lt;p&gt;(This will open on the same tab)&lt;/p&gt;\n    &lt;p&gt;\n        Visit my website: \n        &lt;a href=&quot;jenna-personal-website.netlify.app/&quot;&gt;Visit&lt;/a&gt;\n    &lt;/p&gt;\n    &lt;p&gt;(This will open on the Another tab)&lt;/p&gt;\n    &lt;p&gt;\n        Visit my website: \n        &lt;a href=&quot;jenna-personal-website.netlify.app/&quot; target=&quot;_blank&quot;&gt;Visit&lt;/a&gt;\n    &lt;/p&gt;\n    \n&lt;/body&gt;\n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/body":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/body","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/body.md","title":"body","links":["Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/html"],"tags":[],"content":"HTML body Tag\nThe &lt;body&gt; tag in HTML defines the main content of a web page and is always placed within the html tag as its last child. It contains everything that is visible on the page, including headings, paragraphs, images, links, tables and lists.\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    Hello!\n&lt;/body&gt;\n&lt;/html&gt;\nBody tag with CSS implementation\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=&quot;background-color: plum;&quot;&gt;\n    Hello!\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body text=&quot;red&quot;&gt;\n    Hello!\n&lt;/body&gt;\n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/bold":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/bold","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/bold.md","title":"bold","links":["strong","font-weight-property"],"tags":[],"content":"The &lt;b&gt; Tag\nThe &lt;b&gt; tag in HTML is used to make the enclosed text bold, giving it greater emphasis or visual importance.  Unlike the strong tag, which also makes text bold but with semantic importance. The &lt;b&gt; tag is purely for styling purposes and does not carry semantic meaning.\nExample:\n&lt;p&gt;This is a &lt;b&gt;bold&lt;/b&gt; word in this sentence&lt;/p&gt;\nNote: Alternatively we can use the CSS font-weight property to bold text.\nUsing CSS font-weight Property\n&lt;p style=&quot;font-weight: bold&quot;&gt;This is bold text using CSS&lt;/p&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/break":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/break","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/break.md","title":"break","links":[],"tags":[],"content":"HTML br Tag\nThe &lt;br&gt; tag in HTML is used to create a line break in the text, causing the content that follows it to appear on a new line.\nNote: It is a self-closing tag, meaning it does not need a separate closing tag\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;My Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p&gt;\n        Hello!&lt;br&gt;\n        My name is Jenna.&lt;br&gt;&lt;br&gt; This is just a test!\n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/button":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/button","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/button.md","title":"button","links":["autofocus","disabled","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/form","formaction","formnovalidate","formenctype","formmethod","formtarget","type","value"],"tags":[],"content":"HTML Button Tag\nThe &lt;button&gt; tag in HTML is used to create clickable buttons on a web page. These buttons can trigger various actions such as submitting a form, running JavaScript functions or simply interacting with users.\n\nVersatile Content: The &lt;button&gt; tag can contain text, images, or other HTML elements.\nForm Integration: Can be used inside forms to submit or reset data.\nEvent Handling: Supports event attributes like onclick, onmouseover, and onfocus for interactive actions.\nCustomizable Styles: Easily styled with CSS, including properties like border-radius, box-shadow, and animations.\n\nSyntax:\n&lt;button&gt;Click Me&lt;/button&gt;\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n    &lt;style&gt;\n        button:hover{\n            background-color: grey;\n            color: white;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;button&gt;Click Me!&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nHTML Disabled Buttons\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Disabled Buttons Example&lt;/title&gt;\n    &lt;style&gt;\n        button {\n            padding: 10px 20px;\n            font-size: 16px;\n            cursor: pointer;\n            border-radius: 8px;\n            border: 1px solid #ccc;\n        }\n \n        button:disabled{\n            background-color: #e0e0e0;\n            color: #a0a0a0;\n            cursor: not-allowed;\n            \n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;button&gt;Active Button&lt;/button&gt;\n    &lt;button disabled&gt;Disabled Button&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nOutput:\n\nAttributes\nAttributes that can be used with the &lt;button&gt; tag:\n\nautofocus\ndisabled\nform\nformaction\nformnovalidate\nformnovalidate\nformenctype\nformmethod\nformtarget\ntype\nvalue\n\nEvent Attributes of the &lt;button&gt; Tag\n\nonclick: This event is triggered when the button is clicked\n\n&lt;button onclick=&quot;alert(&#039;Button Clicked!&#039;)&quot;&gt;Click Me!&lt;/button&gt;\n\nonmouseover: This event is triggered when the user hovers over the button\n\n&lt;button onmouseover=&quot;this.style.backgroundColor = &#039;yellow&#039;&quot;&gt;Hover Over Me!&lt;/button&gt;\n\nonmouseout: This event is triggered when the mouse leaves the button\n\n&lt;button onmouseout=&quot;this.style.backgroundColor = &#039;&#039;&quot;&gt;Mouse Out Button&lt;/button&gt;\n\nonfocus: This event is triggered when the button gains focus (clicked or tabbed into)\n\n&lt;button onfocus=&quot;this.style.backgroundColor = &#039;lightblue&#039;&quot;&gt;Focus Me!&lt;/button&gt;\n\nonblur: This event is triggered when the button loses focus.\n\n&lt;button onblur=&quot;this.style.backgroundColor = &#039;&#039;&quot;&gt;Blur Me!&lt;/button&gt;\nIf you want to test all of them:\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Disabled Buttons Example&lt;/title&gt;\n    &lt;style&gt;\n        button {\n            padding: 10px 20px;\n            font-size: 16px;\n            cursor: pointer;\n            border-radius: 8px;\n            border: 1px solid #ccc;\n        }\n \n        button:disabled{\n            background-color: #e0e0e0;\n            color: #a0a0a0;\n            cursor: not-allowed;\n            \n        }\n \n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;button onclick=&quot;alert(&#039;Button Clicked!&#039;)&quot;&gt;Click Me!&lt;/button&gt;\n    &lt;button onmouseover=&quot;this.style.backgroundColor = &#039;yellow&#039;&quot;&gt;Hover Over Me!&lt;/button&gt;\n    &lt;button onmouseout=&quot;this.style.backgroundColor = &#039;purple&#039;&quot;&gt;Mouse Out Button&lt;/button&gt;\n    &lt;button onfocus=&quot;this.style.backgroundColor = &#039;lightblue&#039;&quot;&gt;Focus Me!&lt;/button&gt;\n    &lt;button onblur=&quot;this.style.backgroundColor = &#039;red&#039;&quot;&gt;Blur Me!&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/caption":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/caption","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/caption.md","title":"caption","links":[],"tags":[],"content":"The &lt;caption&gt; tag in HTML is used to provide a title or description for a &lt;table&gt; element. It helps give context or additional information about the content of the table.\nThe &lt;caption&gt; tag must be placed immediately after the opening &lt;table&gt; tag.\nUseful for summarizing table data, especially in large datasets."},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/code":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/code","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/code.md","title":"code","links":[],"tags":[],"content":"The HTML &lt;code&gt; tag is a semantic element used to define a piece of computer code. When creating web pages, it’s often necessary to display programming code, and the &lt;code&gt; tag makes it easy to do so.\nThe&lt;code&gt; tag is specifically designed to display computer output, such as code snippets, in a web browser\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n \n&lt;head&gt;\n    &lt;title&gt;Code Tag Example&lt;/title&gt;\n&lt;/head&gt;\n \n&lt;body&gt;\n    &lt;h3&gt;Code Example&lt;/h3&gt;\n    &lt;p&gt;This is the example:&lt;/p&gt;\n    &lt;pre&gt;\n        &lt;code&gt;\n            function greet(name) {\n                return &quot;Hello, &quot; + name + &quot;!&quot;;\n            }\n        &lt;/code&gt;\n    &lt;/pre&gt;\n \n&lt;/body&gt;\n \n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/div":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/div","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/div.md","title":"div","links":[],"tags":[],"content":"HTML &lt;div&gt; tag\nThe &lt;div&gt; tag divides contents into sections and serve as flexible container for text, images and links.\nEasily styled with CSS and customised using classes or IDs.\n\nBlock-Level Element: The &lt;div&gt; tag is a block-level element, meaning it takes up the full width and starts on a new line.\nStyling with CSS: It can be styled using CSS, allowing customization like width, background color, padding, and margins.\nInline-Block Option: By using display: inline-block, a &lt;div&gt; can behave like an inline element while retaining block-level features.\nUsed for Layouts: &lt;div&gt; is often used in layouts with Flexbox or Grid to organize content and arrange sections of a webpage.\n\nSyntax:\n&lt;div&gt;\n\t&lt;!-- Content goes here --&gt;\n&lt;/div&gt;\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n \n    &lt;style&gt;\n        div {\n            color:white;\n            background-color: grey;\n            text-align: center;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Understanding the &lt;code&gt;div&lt;/code&gt; tag in HTML&lt;/h1&gt;\n    &lt;p&gt;The &lt;code&gt;div&lt;/code&gt; tag is used to group content together&lt;/p&gt;\n    &lt;div&gt;\n        &lt;p&gt;This is the first div tag&lt;/p&gt;\n        &lt;p&gt;Here is some text in the first div tag&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;p&gt;This is the second div tag&lt;/p&gt;\n        &lt;p&gt;Here is some text in the second div tag&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nHow to style the div tag?\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Shadow Effect with div&lt;/title&gt;\n    &lt;style&gt;\n        .shadow-effect {\n            width: 300px;\n            height: 200px;\n            background-color: lightblue;\n            margin: 50px auto;\n            box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.3);\n            padding: 20px;\n            font-size: 20px;\n            text-align: center;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=&quot;shadow-effect&quot;&gt;\n        This div has a shadow effect.\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nBest Practices\n\nUse semantic tags when possible: While &lt;div&gt; tag is great for layout and grouping, try to use more descriptive, semantic tags like &lt;header&gt;, &lt;footer&gt;, &lt;article&gt;, &lt;section&gt;, and &lt;aside&gt; for better accessibility and SEO.\nLimit the Use of &lt;div&gt;Tags: Avoid overusing &lt;div&gt; tags unnecessarily. Excessive use of &lt;div&gt; elements can make your HTML code less readable and harder to maintain. Only use &lt;div&gt; when other tags are not appropriate.\nUse Classes and IDs for Styling: When styling &lt;div&gt; elements, use classes or IDs to target specific &lt;div&gt; tags, making your styles more organized and reusable.\nKeep the Structure Clean: Properly structure your &lt;div&gt; tags by nesting them logically and keeping your HTML as semantic as possible. This will improve maintainability and readability.\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/fieldset":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/fieldset","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/fieldset.md","title":"fieldset","links":["legend"],"tags":[],"content":"HTML Fieldset Tag\nThe &lt;fieldset&gt; tag in HTML is used to group related elements within a form. It provides a visual and semantic structure to the form, making it easier for users to understand the relationship between different input elements. The &lt;fieldset&gt; tag is often used with the legend tag, which provides a caption or title for the group of fields.\nSyntax:\n&lt;fieldset&gt;\n    &lt;legend&gt;Group Title&lt;/legend&gt;\n    &lt;!-- Form elements go here --&gt;\n&lt;/fieldset&gt;\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n \n&lt;head&gt;\n  &lt;style&gt;\n    fieldset {\n      border: 2px solid black;\n      padding: 10px;\n      margin: 10px 0;\n    }\n \n    legend {\n      font-weight: bold;\n      padding: 0 10px;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n \n&lt;body&gt;\n  &lt;h1&gt;Contact Form&lt;/h1&gt;\n  &lt;form&gt;\n    &lt;fieldset&gt;\n      &lt;legend&gt;Personal Information&lt;/legend&gt;\n      &lt;label for=&quot;name&quot;&gt;Name:&lt;/label&gt;\n      &lt;input type=&quot;text&quot; id=&quot;name&quot; \n             name=&quot;name&quot; required&gt;&lt;br&gt;&lt;br&gt;\n \n      &lt;label for=&quot;email&quot;&gt;Email:&lt;/label&gt;\n      &lt;input type=&quot;email&quot; id=&quot;email&quot; \n             name=&quot;email&quot; required&gt;&lt;br&gt;&lt;br&gt;\n    &lt;/fieldset&gt;\n \n    &lt;fieldset&gt;\n      &lt;legend&gt;Message Details&lt;/legend&gt;\n      &lt;label for=&quot;subject&quot;&gt;Subject:&lt;/label&gt;\n      &lt;input type=&quot;text&quot; id=&quot;subject&quot; \n             name=&quot;subject&quot; required&gt;&lt;br&gt;&lt;br&gt;\n \n      &lt;label for=&quot;message&quot;&gt;Message:&lt;/label&gt;\n      &lt;textarea id=&quot;message&quot; name=&quot;message&quot; \n                required&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;\n    &lt;/fieldset&gt;\n \n    &lt;input type=&quot;submit&quot; value=&quot;Send Message&quot;&gt;\n  &lt;/form&gt;\n \n&lt;/body&gt;\n \n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/figcaption":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/figcaption","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/figcaption.md","title":"figcaption","links":[],"tags":[],"content":"HTML Figcaption Tag\nThe &lt;figcaption&gt; tag in HTML is used to provide a caption or description for a &lt;figure&gt; element.\n\nThis tag is typically used to describe an image, illustration, chart, or any other content that requires an explanation.\nIt helps to improve accessibility and search engine optimization (SEO) by associating descriptive text with visual content.\nThe &lt;figcaption&gt; element can be placed as the first or last child of the &lt;figure&gt; element.\n\nSyntax:\n&lt;figure&gt;\n  &lt;img src=&quot;image.jpg&quot; alt=&quot;Description of the image&quot;&gt;\n  &lt;figcaption&gt;This is the caption or description of the image.&lt;/figcaption&gt;\n&lt;/figure&gt;\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n \n&lt;body&gt;\n  &lt;figure&gt;\n    &lt;img src=&quot;jenna-personal-website.netlify.app/images/logo.png&quot; \n         alt=&quot;logo&quot;&gt;\n    &lt;figcaption&gt;\n      This is my logo.\n    &lt;/figcaption&gt;\n  &lt;/figure&gt;\n&lt;/body&gt;\n \n&lt;/html&gt;\nStyling\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n  &lt;title&gt;Document&lt;/title&gt;\n \n  &lt;style&gt;\n    figure {\n      text-align: center;\n      margin: 20px;\n    }\n \n    figcaption {\n      font-style: italic;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;figure&gt;\n    &lt;img src=&quot;jenna-personal-website.netlify.app/images/logo.png&quot; \n         alt=&quot;logo&quot;&gt;\n    &lt;figcaption&gt;\n      This is my logo.\n    &lt;/figcaption&gt;\n  &lt;/figure&gt;\n&lt;/body&gt;\n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/figure":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/figure","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/figure.md","title":"figure","links":["Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/figcaption","img-src"],"tags":[],"content":"HTML figure Tag\nThe &lt;figure&gt; tag is used to insert self-contained content such as illustrations, diagrams, photos, or code listings in a document. It can be placed at any position in the document and is related to the main flow. The content inside the &lt;figure&gt; tag goes with the flow of the document, so if it is removed, it won’t affect the flow of the document. This tag is a new addition to HTML5.\nTo add a description or caption for the content inside the &lt;figure&gt; tag, we use the figcaption tag.\nSyntax:\n&lt;figure&gt; Image content... &lt;/figure&gt;\nAttributes:\n\nimg src - This tag is used to add an image source to the document\nfigcaption - This tag is used to set the caption to the image\n\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n \n&lt;body&gt;\n  &lt;figure&gt;\n    &lt;img src=&quot;jenna-personal-website.netlify.app/images/logo.png&quot; \n         alt=&quot;logo&quot;&gt;\n    &lt;figcaption&gt;This is my logo.&lt;/figcaption&gt;\n  &lt;/figure&gt;\n&lt;/body&gt;\n \n&lt;/html&gt;\nHow to style figure tag?\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n \n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; \n          content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Figure Tag Example&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f0f0f0;\n            text-align: center;\n        }\n \n        h1 {\n            background-color: #333;\n            color: #fff;\n            padding: 15px;\n        }\n \n        figure {\n            margin: 20px;\n            padding: 10px;\n            border: 1px solid #ccc;\n            border-radius: 10px;\n            background-color: #fff;\n            display: inline-block;\n        }\n \n        img {\n            max-width: 100%;\n            height: auto;\n            border-radius: 4px;\n        }\n \n        figcaption {\n            margin-top: 10px;\n            font-style: italic;\n            color: #555;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n \n&lt;body&gt;\n \n    &lt;h1&gt;Welcome&lt;/h1&gt;\n    &lt;h2&gt;Figure Tag Example&lt;/h2&gt;\n \n    &lt;!-- HTML figure tag starts here --&gt;\n    &lt;figure&gt;\n        &lt;img src=\n             jenna-personal-website.netlify.app/images/logo.png\n             alt=&quot;Geeks Logo&quot; \n             width=&quot;304&quot;\n             height=&quot;228&quot;&gt;\n        &lt;figcaption&gt;My logo&lt;/figcaption&gt;\n    &lt;/figure&gt;\n    &lt;!-- HTML figure tag ends here --&gt;\n \n&lt;/body&gt;\n \n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/footer":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/footer","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/footer.md","title":"footer","links":["semantic-tag"],"tags":[],"content":"HTML Footer Tag\nThe &lt;footer&gt; tag in HTML is used to define the footer section of an HTML document.\n\nThe footer section typically contains information such as contact information, sitemap, back-to-top links, related documents, copyright, etc.\nThe footer tag is a semantic tag included in HTML along with other tags like article, nav, header, etc.\nIt is not mandatory, but adds to clear structure to the document and useful for SEO.\n\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n  &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;Welcome!&lt;/h1&gt;\n \n  &lt;p&gt;Here is some text&lt;/p&gt;\n \n  &lt;footer&gt;\n    &lt;p&gt;&amp;copy;2025 Jenna. Built with passion.&lt;/p&gt;\n  &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nHow to style footer tag\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n  &lt;title&gt;Document&lt;/title&gt;\n \n  &lt;style&gt;\n    footer {\n      background: #fde8e6;\n      text-align: center;\n      padding: 5px;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;Welcome!&lt;/h1&gt;\n \n  &lt;p&gt;Here is some text&lt;/p&gt;\n \n  &lt;footer&gt;\n    &lt;p&gt;&amp;copy;2025 Jenna. Built with passion.&lt;/p&gt;\n  &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nBest Practices for Using the HTML footer Tag\n\nAvoid Overloading with Content: While the footer is meant for additional or supplementary content, avoid overloading it with too much information. Stick to key links and essential details to prevent clutter.\nEnsure Mobile Responsiveness: When designing a footer, make sure that the content is accessible and looks good on all screen sizes. Footer content should be arranged in a user-friendly manner, especially on mobile devices.\nUse Clear and Descriptive Links: In the footer, links to external sites, social media, or important pages (like privacy policy or terms of service) should be clearly labeled so users know what to expect when clicking.\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/form":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/form","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/form.md","title":"form","links":["checkboxes","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/button","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes/name","target","Action-Attribute","Enctype-Attribute","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes/methods","accept-charset","autocomplete","novalidate","rel","radio-button"],"tags":[],"content":"HTML form Tag\nThe &lt;form&gt; tag is used to create an HTML form for user input. It servers as a container for various input elements like text fields, checkboxes and button, enabling the collection of data for submission to a server or processing via client-server side scripts.\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form action=&quot;/submit&quot; method=&quot;GET&quot;&gt;\n        &lt;h2&gt;User Information&lt;/h2&gt;\n \n        &lt;label for=&quot;fname&quot;&gt;First Name&lt;/label&gt;\n        &lt;input id=&quot;fname&quot; name=&quot;fname&quot; placeholder=&quot;Enter your first name&quot; required=&quot;&quot; type=&quot;text&quot;/&gt;\n \n        &lt;br/&gt;&lt;br/&gt;\n \n        &lt;label for=&quot;lname&quot;&gt;Last Name&lt;/label&gt;\n        &lt;input id=&quot;lname&quot; name=&quot;lname&quot; placeholder=&quot;Enter your last name&quot; required=&quot;&quot; type=&quot;text&quot;/&gt;\n        \n        &lt;br/&gt;&lt;br/&gt;\n        \n        &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;/&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nCommon Form Element\n\n[[input|]]\n[[button|]]\n[[select|]]\n[[textarea|]]\n[[label|&lt;label&gt;]]\n[[fieldset|]]\n[[legend|]]\n[[datalist|]]\n[[output|]]\n\nAttributes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAttributesDescriptionsnameIt provides a name for the formtargetIt specifies where to display the response after form submission (like a new window)Action AttributeSends form data to the server upon submissionEnctype Attribute- application/x-www-form-urlencoded: Standard form data submission.- multipart/form-data: Used for file uploads like images, documents, etc.methods- Get Method: Limited URL character length and used when we have to get data from somewhere like server.- Post Method: No size limits, submissions cannot be bookmarked and used when we sends data to serveraccept-charsetIt specifies the character encodings that is to be used for the form submission.autocompleteIt specifies whether a form should have autocomplete on or offnovalidateIt specifies that the form should not be validated before submittingrelIt specifies the relationship between a linked resource and the current document.\nForm with Radio Button\nIn this example, we create a form with radio buttons for gender selection.\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form action=&quot;personalDetails.php&quot; method=&quot;post&quot;&gt;\n        &lt;fieldset&gt;\n            &lt;legend&gt;Gender&lt;/legend&gt;\n            &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;male&quot; required/&gt;Male\n            &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;female&quot; required/&gt;Female\n            &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;others&quot; required/&gt;Others\n        &lt;/fieldset&gt;\n        &lt;br&gt;\n        &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;/&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nForm with checkbox\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form action=&quot;personalDetails.php&quot; method=&quot;post&quot;&gt;\n        &lt;fieldset&gt;\n            &lt;legend&gt;Gender&lt;/legend&gt;\n            &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;male&quot; required/&gt;Male\n            &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;female&quot; required/&gt;Female\n            &lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;others&quot; required/&gt;Others\n        &lt;/fieldset&gt;\n        &lt;br&gt;\n        \n        &lt;input type=&quot;checkbox&quot; name=&quot;terms&quot; value=&quot;terms&quot; required/&gt; I have read the terms and conditions\n        &lt;br/&gt;&lt;br/&gt;\n \n        &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;/&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n \n \n "},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/head":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/head","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/head.md","title":"head","links":["metadata"],"tags":[],"content":"HTML head tag\nThe &lt;head&gt; tag in HTML is is an essential element used to define the head section of an HTML document. It is placed inside the &lt;html&gt; tag and used to store information that doesn’t appear directly on the webpage itself.\n\nIt contains metadata that helps the browser and search engines to understand the content of the page.\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    \n&lt;/body&gt;\n&lt;/html&gt;\nCommon Elements Inside the head tag\n\n[[title|tag]]\n[[meta|&lt;meta&gt; tag]]\n[[link| tag]]\n[[style| tag]]\n[[script|&lt;script&gt; tag]]\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/header":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/header","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/header.md","title":"header","links":[],"tags":[],"content":"HTML header Tag\nThe &lt;header&gt; tag is a semantic HTML element that is used to define the introductory or navigational content of a webpage or a section. Typically, a header contains elements like:\n\nThe website or page title\nLogo or branding\nNavigation menus\nSearch bar\nAny introductory information relevant to the page or section\n\nNote: Header tag cannot be placed within a &lt;footer&gt;, &lt;address&gt;, or another &lt;header&gt; element.\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n    \n    &lt;style&gt;\n        nav {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            max-width: 1200px;\n            margin: 0 auto;\n            background-color: pink;\n        }\n \n        img {\n            height: 40px;\n            width: auto;\n            max-width: 150px;\n            margin-right: auto;\n        }\n        .nav-links {\n            display: flex;\n            gap: 0.5rem;\n            align-items: right;\n            justify-content: right;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            &lt;img src=&quot;jenna-personal-website.netlify.app/images/logo.png&quot; alt=&quot;logo&quot;/&gt;\n            \n            &lt;div class=&quot;nav-links&quot;&gt;\n                &lt;a href=&quot;#home&quot;&gt;Home&lt;/a&gt;\n                &lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;\n                &lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;\n            &lt;/div&gt;\n \n        &lt;/nav&gt;\n    &lt;/header&gt;\n    \n&lt;/body&gt;\n&lt;/html&gt;\nKey Points to Remember About the &lt;header&gt; Tag\n\nMultiple headers: You can have multiple &lt;header&gt; tags on a page. For example, each section or article can have its own &lt;header&gt;, but there should only be one site-wide &lt;header&gt;.\nNot just for titles: While the &lt;header&gt; tag often contains a heading (&lt;h1&gt;, &lt;h2&gt;), it can also hold other elements like navigation links (&lt;nav&gt;), search bars, or introductory text.\nKeep it clear: The &lt;header&gt; tag should contain introductory content. It’s not meant to hold all content; its purpose is to help introduce or navigate the content.\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/heading":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/heading","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/heading.md","title":"heading","links":[],"tags":[],"content":"HTML Headings\nHTML headings are used to define the titles and subtitles of sections on a webpage. They help organize the content and create a structure that is easy to navigate.\n\nProper use of headings enhances readability by organizing content into clear sections.\nSearch engines utilize headings to understand page structure, aiding in SEO.\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;This is the Main Heading&lt;/h1&gt;\n\t&lt;h2&gt;This is a Subheading&lt;/h2&gt;\n\t&lt;h3&gt;This is a Smaller Subheading&lt;/h3&gt;\n\t&lt;h4&gt;This is a Sub-Subheading&lt;/h4&gt;\n\t&lt;h5&gt;This is a Minor Subheading&lt;/h5&gt;\n\t&lt;h6&gt;This is the Smallest Heading&lt;/h6&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nBest Practices for Using HTML Headings\n\nUse Only One &lt;h1&gt; per Page: The &lt;h1&gt; tag should be reserved for the main title of the page. Too many &lt;h1&gt; tags can confuse both users and search engines about the content’s priority.\nMaintain a Logical Structure: Follow a logical hierarchy of headings (&lt;h1&gt; → &lt;h2&gt; → &lt;h3&gt;) to ensure content is organized. Don’t jump directly from &lt;h1&gt; to &lt;h4&gt;, as it can make the content harder to navigate.\nKeep Headings Descriptive: Headings should clearly describe the content that follows. This makes it easier for readers to understand what each section is about.\nAvoid Overusing Heading Tags: Headings are for organizing content, not for styling text. Use them where appropriate and avoid using heading tags for emphasis or styling alone.\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/html":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/html","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/html.md","title":"html","links":[],"tags":[],"content":"HTML &lt;html&gt; tag\nHTML is a language full of diverse elements, and one such element is the &lt;html&gt; tag. This tag, standing for ‘HyperText Markup Language’, is used to define the root of an HTML or XHTML document.\n\nIt serves as the main container for all other HTML elements, excluding the [[!DOCTYPE html|]] declaration\nIt follows the  declaration and requires both opening and closing tags.\n\n&lt;!DOCTYPE html&gt;\n \n&lt;!-- html tag starts here --&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    \n&lt;/body&gt;\n&lt;/html&gt;\n&lt;!-- html tag ends here --&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/image":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/image","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/image.md","title":"image","links":["src","alt","crossorigin","height","width","ismap","loading","longdesc","referrerpolicy","sizes","srcset","usemap"],"tags":[],"content":"HTML Images\nThe HTML  tag is used to embed an image in web pages by linking them. It creates a placeholder for the image, defined by attributes like src, width, height, and alt, and does not require a closing tag.\nThere are two ways to insert the images into a webpage:\n\nBy providing a full path or address (URL) to access an internet file.\nBy providing the file path relative to the location of the current web page file.\n\nHTML img tag\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAttributeDescriptionsrcSpecifies the path to the image file.altProvides alternate text for the image, useful for accessibility and when the image cannot be displayed.crossoriginAllows importing images from third-party sites with cross-origin access, typically used with canvas.heightSpecifies the height of the image.widthSpecifies the width of the image.ismapSpecifies an image as a server-side image map.loadingSpecifies whether the browser should defer image loading or load it immediately.longdescSpecifies a URL to a detailed description of the image.referrerpolicySpecifies which referrer information to use when fetching the image.sizesSpecifies image sizes for different page layouts.srcsetSpecifies a list of image files to use in different situations, allowing for responsive images.usemapSpecifies an image as a client-side image map."},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/input-Types/text":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/input-Types/text","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/input Types/text.md","title":"text","links":["Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes/name","value","placeholder","maxlength","required","readonly","disabled"],"tags":[],"content":"HTML &lt;input type=&quot;text&quot;&gt;\nHTML &lt;input type=&quot;text&quot;&gt; is used to create a single-line text input field where users can enter textual data. It is commonly used in forms for capturing information like names, emails, or messages.\nSyntax:\n&lt;input type=&quot;text&quot;&gt;\nAttributes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAttributeDescriptionnameSpecifies the name of the input element, used to identify form data after submission.valueSpecifies the default value of the input field.placeholderProvides a hint to the user of what can be entered in the input field.maxlengthDefines the maximum number of characters allowed in the input field.requiredIndicates that the input field must be filled out before submitting the form.readonlyMakes the input field read-only, preventing the user from modifying its value.disabledDisables the input field, making it uneditable and excluding it from form submission.Example:\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  \n&lt;body&gt;\n    &lt;h2&gt;HTML &amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/h2&gt;\n \n    &lt;form action=&quot;#&quot;&gt;\n        &lt;label for=&quot;fname&quot;&gt;First Name&lt;/label&gt;\n        &lt;input type=&quot;text&quot; id=&quot;fname&quot;&gt;\n        &lt;br&gt;&lt;br&gt;\n \n        &lt;label for=&quot;lname&quot;&gt;Last Name&lt;/label&gt;\n        &lt;input type=&quot;text&quot; id=&quot;lname&quot;&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n \n&lt;/html&gt;"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/input":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags/input","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/HTML Tags/input.md","title":"input","links":[],"tags":[],"content":"HTML input Tag\nThe &lt;input&gt; tag in HTML is used to collect user input in web forms. It supports various input types such as text, password, checkboxes, radio buttons and more.\nAn input field can be of various types depending upon the attribute type. The Input tag is an empty element that only contains attributes. For defining labels for the input element, &lt;label&gt; can be used.\nCommon &lt;input&gt; Types\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInput TypeDescription[[text|]]Single-line text input[[]]Masked text input for passwords[[]]Toggle for selecting multiple options[[]]Single selection from multiple options[[]]Button to submit form data[[]]General-purpose button[[]]Input for uploading files[[]]Input for numerical values[[]]Input for selecting dates[[]]Input for email addresses[[]]Input for selecting colors[[]]Slider for selecting a numeric value within a range[[]]Hidden input for form data[[]]Input using an image for form submission\nAttributes"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/Introduction-to-CSS":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/Introduction-to-CSS","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/Introduction to CSS.md","title":"Introduction to CSS","links":["Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Rules","Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Selectors","Web-and-Mobile-Application-Development/HTML_CSS/Notes/CSS-Properties"],"tags":[],"content":"What is CSS?\nCSS (Cascading Style Sheets) is a stylesheet language used to design the web page to make it “attractive”.\nThere are three types of CSS:\n\nInline CSS: In Inline CSS, we add the style to the tags using the “style” attribute inside the tag which we want to design.\nInternal or Embedded CSS: Internal CSS allows us to style our page by adding the &lt;style&gt; tag inside the &lt;head&gt; tag. Inside the &lt;style&gt; tag, we add the design that we want to give to our page.\nExternal CSS:* External CSS lets us add style to our HTML page externally. We can add our styles in a different file with extension .css and link this page to our HTML page.\n\nExample of an internal CSS:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;My First Page&lt;/title&gt;\n \n    &lt;style&gt;\n        body {\n            text-align: center;\n        }\n \n        h1 {\n            color: green;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Welcome to my First Page&lt;/h1&gt;\n    &lt;p&gt;A place where you will learn HTML and CSS&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nSome CSS reference point:\n\nCSS Rules\nCSS Selectors\nCSS Properties\n"},"Web-and-Mobile-Application-Development/HTML_CSS/Notes/Introduction-to-HTML":{"slug":"Web-and-Mobile-Application-Development/HTML_CSS/Notes/Introduction-to-HTML","filePath":"Web and Mobile Application Development/HTML_CSS/Notes/Introduction to HTML.md","title":"Introduction to HTML","links":["Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Tags","Web-and-Mobile-Application-Development/HTML_CSS/Notes/HTML-Attributes"],"tags":[],"content":"HTML\nWhat is HTML?\nHTML, stands for HyperText Markup Language, is the standard language for designing web pages.\n\n\n                  \n                  Tip \n                  \n                \n\n\nIf you are using VS code, you just need to type ! then hit Enter\nYou get this: (This is called a boiler template)\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n  &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n\n\n\nExample:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;My First Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Welcome to my First Page&lt;/h1&gt;\n    &lt;p&gt;A place where you will learn HTML and CSS&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nThen, we “run” it.\n\n\n                  \n                  Tip \n                  \n                \n\n\nAgain if you are using vs code, you can download the extension Live server. (If you don’t already have it).\nTo do so:\n\nPress ctrl + Shift + x Or simply by navigating to the Extensions view icon on the side bar(which on the leftmost of the screen, - the last icon)\nIn the search bar, type “Live Server” and click install.\nYou “run” the HTML code by clicking on “Go Live”. (This will open your default browser)\n\n\n\n\n\nSome HTML reference point:\n\nHTML Tags\nHTML Attributes\n"},"Web-and-Mobile-Application-Development/Web-and-Mobile-Application-Development":{"slug":"Web-and-Mobile-Application-Development/Web-and-Mobile-Application-Development","filePath":"Web and Mobile Application Development/Web and Mobile Application Development.md","title":"Web and Mobile Application Development","links":["Web-and-Mobile-Application-Development/HTML_CSS/HTML_CSS","Web-and-Mobile-Application-Development/Django/Django"],"tags":[],"content":"Welcome\nWelcome to my notes for Web and Mobile Application Development. The web development will be done using Django as framework, which a python base framework.\nContent\n\nHTML_CSS\nDjango\n"},"index":{"slug":"index","filePath":"index.md","title":"index","links":["Web-and-Mobile-Application-Development/Web-and-Mobile-Application-Development"],"tags":[],"content":"Welcome To My Online Vault Of Notes\nHere you can find all of my notes. So enjoy!\nNotes:\n\nWeb and Mobile Application Development\n"}}